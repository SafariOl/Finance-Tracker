{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Chainer = void 0;\nconst converter_1 = require(\"../converter\");\n/**\n * Chained converter.\n * It defaults to the basic API provider, and does not require initialization.\n *\n * @example\n *  let value = await Convert(15).from(\"USD\").to(\"EUR\");\n *\n * @export\n * @param {number} amount - amount of currency to convert\n * @returns\n */\nfunction Chainer(amount = undefined) {\n  let _currentAmount = amount;\n  let _currentFrom = undefined;\n  let _currentTo = undefined;\n  let _currentRates = undefined;\n  // local converter\n  const _converter = new converter_1.Converter();\n  /**\n   *  Return object construction, prepared for chaining.\n   */\n  const chainable = {\n    from: _from,\n    to: _to,\n    fetch: _fetch,\n    get rates() {\n      return _currentRates;\n    },\n    amount: _amount\n  };\n  /**\n   * Chain member that fetches and caches the rates for the given currency.\n   *\n   * @returns chainable object\n   */\n  function _fetch() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // fetching rates for the base currency\n      _currentRates = yield _converter.getRates(_currentFrom, \"\", true);\n      return chainable;\n    });\n  }\n  // returning chainable\n  return chainable;\n  /**\n   * Chain member that sets the base currency\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _amount(val) {\n    _currentAmount = val;\n    return chainable;\n  }\n  /**\n   * Chain member that sets\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _from(from) {\n    _currentFrom = from;\n    return chainable;\n  }\n  /**\n   * Final chain member (ends chain)\n   *\n   * @param {string} to - final currency\n   * @returns {number} - final converted amount\n   */\n  function _to(to) {\n    return __awaiter(this, void 0, void 0, function* () {\n      _currentTo = to;\n      // converting\n      const result = yield _converter.convert(_currentAmount, _currentFrom, _currentTo, _currentRates);\n      return result;\n    });\n  }\n}\nexports.Chainer = Chainer;","map":{"version":3,"names":["converter_1","require","Chainer","amount","undefined","_currentAmount","_currentFrom","_currentTo","_currentRates","_converter","Converter","chainable","from","_from","to","_to","fetch","_fetch","rates","_amount","getRates","val","result","convert","exports"],"sources":["C:\\Users\\yurii\\OneDrive\\Pulpit\\site-anim\\node_modules\\easy-currencies\\src\\parts\\chainer.ts"],"sourcesContent":["import { Converter, rateObject } from \"../converter\";\n\nimport __to from \"await-to-js\";\n\n/**\n * The chainable object interface.\n *\n * @interface chainableConverter\n */\ninterface chainableConverter {\n  from: (from: string) => chainableConverter;\n  to: (to: string) => Promise<number>;\n  fetch: () => Promise<chainableConverter>;\n  rates: rateObject;\n  amount: (val: number) => chainableConverter;\n}\n\n/**\n * Chained converter.\n * It defaults to the basic API provider, and does not require initialization.\n *\n * @example\n *  let value = await Convert(15).from(\"USD\").to(\"EUR\");\n *\n * @export\n * @param {number} amount - amount of currency to convert\n * @returns\n */\nexport function Chainer(amount: number | undefined = undefined) {\n  let _currentAmount: number | undefined = amount;\n  let _currentFrom: string | undefined = undefined;\n  let _currentTo: string | undefined = undefined;\n  let _currentRates: any | undefined = undefined;\n\n  // local converter\n  const _converter = new Converter();\n\n  /**\n   *  Return object construction, prepared for chaining.\n   */\n  const chainable: chainableConverter = {\n    from: _from,\n    to: _to,\n    fetch: _fetch,\n    get rates() {\n      return _currentRates;\n    },\n    amount: _amount\n  };\n\n  /**\n   * Chain member that fetches and caches the rates for the given currency.\n   *\n   * @returns chainable object\n   */\n  async function _fetch() {\n    // fetching rates for the base currency\n    _currentRates = await _converter.getRates(<string>_currentFrom, \"\", true);\n    return chainable;\n  }\n\n  // returning chainable\n  return chainable;\n\n  /**\n   * Chain member that sets the base currency\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _amount(val: number) {\n    _currentAmount = val;\n    return chainable;\n  }\n\n  /**\n   * Chain member that sets\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _from(from: string) {\n    _currentFrom = from;\n    return chainable;\n  }\n\n  /**\n   * Final chain member (ends chain)\n   *\n   * @param {string} to - final currency\n   * @returns {number} - final converted amount\n   */\n  async function _to(to: string) {\n    _currentTo = to;\n\n    // converting\n    const result = await _converter.convert(\n      <number>_currentAmount,\n      <string>_currentFrom,\n      <string>_currentTo,\n      _currentRates\n    );\n\n    return result;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,WAAA,GAAAC,OAAA;AAiBA;;;;;;;;;;;AAWA,SAAgBC,OAAOA,CAACC,MAAA,GAA6BC,SAAS;EAC5D,IAAIC,cAAc,GAAuBF,MAAM;EAC/C,IAAIG,YAAY,GAAuBF,SAAS;EAChD,IAAIG,UAAU,GAAuBH,SAAS;EAC9C,IAAII,aAAa,GAAoBJ,SAAS;EAE9C;EACA,MAAMK,UAAU,GAAG,IAAIT,WAAA,CAAAU,SAAS,EAAE;EAElC;;;EAGA,MAAMC,SAAS,GAAuB;IACpCC,IAAI,EAAEC,KAAK;IACXC,EAAE,EAAEC,GAAG;IACPC,KAAK,EAAEC,MAAM;IACb,IAAIC,KAAKA,CAAA;MACP,OAAOV,aAAa;IACtB,CAAC;IACDL,MAAM,EAAEgB;GACT;EAED;;;;;EAKA,SAAeF,MAAMA,CAAA;;MACnB;MACAT,aAAa,GAAG,MAAMC,UAAU,CAACW,QAAQ,CAASd,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC;MACzE,OAAOK,SAAS;IAClB,CAAC;;EAED;EACA,OAAOA,SAAS;EAEhB;;;;;;EAMA,SAASQ,OAAOA,CAACE,GAAW;IAC1BhB,cAAc,GAAGgB,GAAG;IACpB,OAAOV,SAAS;EAClB;EAEA;;;;;;EAMA,SAASE,KAAKA,CAACD,IAAY;IACzBN,YAAY,GAAGM,IAAI;IACnB,OAAOD,SAAS;EAClB;EAEA;;;;;;EAMA,SAAeI,GAAGA,CAACD,EAAU;;MAC3BP,UAAU,GAAGO,EAAE;MAEf;MACA,MAAMQ,MAAM,GAAG,MAAMb,UAAU,CAACc,OAAO,CAC7BlB,cAAc,EACdC,YAAY,EACZC,UAAU,EAClBC,aAAa,CACd;MAED,OAAOc,MAAM;IACf,CAAC;;AACH;AA7EAE,OAAA,CAAAtB,OAAA,GAAAA,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}