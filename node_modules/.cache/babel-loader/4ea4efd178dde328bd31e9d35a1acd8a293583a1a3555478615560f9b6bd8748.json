{"ast":null,"code":"var fs = require('fs');\nvar path = require('path');\nvar request = require('request');\nvar Promise = require('bluebird');\nvar utils = require('./openExchangeRateUtils.js');\nfs = Promise.promisifyAll(fs);\nvar ratesPath = path.join(__dirname, './db/rates.txt');\nmodule.exports.URL = 'http://openexchangerates.org/api/latest.json?app_id=';\nmodule.exports.init = function (fetchInterval) {\n  fetchInterval = fetchInterval || 3600000;\n  setInterval(module.exports.fetchOptions, fetchInterval, {});\n};\nmodule.exports.createProxy = function (task, options) {\n  return new Promise(function (resolve, reject) {\n    module.exports.fetchOptions(options).then(function (rates) {\n      resolve(utils[task](options, rates));\n    });\n  });\n};\nmodule.exports.fetchOptions = function (options) {\n  return new Promise(function (resolve, reject) {\n    var fetchOption = options.live ? module.exports.fetchLiveRates : module.exports.fetchLocalRates;\n    resolve(fetchOption(options));\n  });\n};\nmodule.exports.fetchLiveRates = function (options) {\n  return new Promise(function (resolve, reject) {\n    request.get(module.exports.URL, function (err, res) {\n      fs.writeFileAsync(ratesPath, utils.write(JSON.parse(res.body).rates)).then(function () {\n        options ? resolve(module.exports.fetchLocalRates(options)) : resolve();\n      });\n    });\n  });\n};\nmodule.exports.fetchLocalRates = function (options) {\n  return new Promise(function (resolve, reject) {\n    fs.readFileAsync(ratesPath, 'utf-8').then(function (contents) {\n      contents.length ? resolve(utils.read(contents, options.convertFrom, options.convertTo)) : resolve(module.exports.fetchLiveRates(options));\n    });\n  });\n};","map":{"version":3,"names":["fs","require","path","request","Promise","utils","promisifyAll","ratesPath","join","__dirname","module","exports","URL","init","fetchInterval","setInterval","fetchOptions","createProxy","task","options","resolve","reject","then","rates","fetchOption","live","fetchLiveRates","fetchLocalRates","get","err","res","writeFileAsync","write","JSON","parse","body","readFileAsync","contents","length","read","convertFrom","convertTo"],"sources":["C:/Users/yurii/OneDrive/Pulpit/site-anim/node_modules/currency-converter/app/openExchangeRates.js"],"sourcesContent":["var fs        = require('fs');\nvar path      = require('path');\nvar request   = require('request');\nvar Promise   = require('bluebird');\nvar utils     = require('./openExchangeRateUtils.js');\n\nfs            = Promise.promisifyAll(fs);\n\nvar ratesPath = path.join(__dirname, './db/rates.txt');\n\nmodule.exports.URL = 'http://openexchangerates.org/api/latest.json?app_id=';\n\nmodule.exports.init = function (fetchInterval) {\n  fetchInterval = fetchInterval || 3600000;\n  setInterval(module.exports.fetchOptions, fetchInterval, {});\n};\n\nmodule.exports.createProxy = function (task, options) {\n  return new Promise(function (resolve, reject) { \n    module.exports.fetchOptions(options)\n          .then(function (rates) {\n            resolve(utils[task](options, rates));\n          });\n  })\n};\n\nmodule.exports.fetchOptions = function (options) {\n  return new Promise(function (resolve, reject) {\n    var fetchOption = options.live ? module.exports.fetchLiveRates : module.exports.fetchLocalRates;\n    resolve(fetchOption(options));\n  });\n}\n\nmodule.exports.fetchLiveRates = function (options) {\n  return new Promise(function (resolve, reject) {\n    request.get(module.exports.URL, function (err, res) {\n      fs.writeFileAsync(ratesPath, utils.write(JSON.parse(res.body).rates))\n        .then(function () {\n          options ? resolve(module.exports.fetchLocalRates(options)) : resolve();\n        })\n    });\n  })\n};\n\nmodule.exports.fetchLocalRates = function (options) {\n  return new Promise(function (resolve, reject) {\n    fs.readFileAsync(ratesPath, 'utf-8')\n      .then(function (contents) {\n        contents.length ? \n          resolve(utils.read(contents, options.convertFrom, options.convertTo)) :\n          resolve(module.exports.fetchLiveRates(options));\n      });    \n  })\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}